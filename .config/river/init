#!/usr/bin/env racket
#lang racket/base
(require racket/system)
(require racket/list)

;;; global variables:
(define modkey "Super") ; set the modkey to super key
(define term "footclient") ; set the terminal to open
(define menu "fuzzel") ; set the launch menu

;; functions:
;; keybindings:
(define (launch-bind mod whichkey app)
  (let([command (string-append-immutable "riverctl map normal "  mod " " whichkey " spawn "  app)])
    (system command)))

(define (action-bind mod whichkey action)
  (let((command (string-append-immutable "riverctl map normal " mod " " whichkey " " action)))
    (system command)))

;; execute a program on startup:
(define (exec program)
  (let ([command (string-append-immutable "riverctl spawn  " program)])
    (system command))) ; uses riverctl to launch applications

;; workspaces:
(define (setup-workspaces)
  (let ((tags (range 1 10)))
    (map
     (lambda(item)
           (let ((tag_number (arithmetic-shift 1 (- item 1))))
             (system (string-append-immutable "riverctl map normal Super " (format "~v" item) " set-focused-tags " (format "~v" tag_number)))
             (system (string-append-immutable "riverctl map normal Super+Shift " (format "~v" item) " set-view-tags " (format "~v" tag_number)))
             (system (string-append-immutable "riverctl map normal Super+Control " (format "~v" item) " toggle-focused-tags " (format "~v" tag_number)))
             (system (string-append-immutable "riverctl map normal Super+Shift+Control " (format "~v" item) " toggle-view-tags " (format "~v" tag_number)))))
     tags)))



;; autostart function:
(define (startup)
  (exec "'foot -s'") ; autostart foot server
  (exec "mako") ; notifications
  ;; (exec "kanshi") ; outputs
  (exec "waybar") ; status bar
  ;; start river tiler to tile windows
  ;; (exec "rivertile")
  ;; (system "riverctl output-layout rivertile")
  (system ("riverctl default-layout rivertile"))
  ;; setup workspaces
  (setup-workspaces)
  ;;; keybindings:
  (launch-bind "Super" "Return" term) ; launch terminal
  (launch-bind "Super+Shift" "E" "wlogout") ; logout
  (launch-bind modkey "D" menu) ; app launcher
  (launch-bind modkey "E" "emacs") ; emacs
  (action-bind "Super+Shift" "Q" "close")
  (setup-workspaces))

;;; run the startup function:
(startup)
